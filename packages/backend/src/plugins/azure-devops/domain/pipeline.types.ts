export interface AzurePipelineKey {
  organization: string;
  project: string;
  id: string;
}

// Generated by https://quicktype.io

export interface AzurePipelineInfo {
  _links: { [x: string]: { href: string } };
  url: string;
  id: number;
  revision: number;
  name: string;
  folder: string;
}

// Generated by https://quicktype.io

export interface AzurePipelineDefinition {
  triggers: AzurePipelineDefinitionTrigger[];
  properties: any;
  tags: any[];
  _links: AzurePipelineDefinitionLinks;
  buildNumberFormat: string;
  jobAuthorizationScope: number;
  jobTimeoutInMinutes: number;
  jobCancelTimeoutInMinutes: number;
  process: AzurePipelineDefinitionProcess;
  repository: AzurePipelineDefinitionRepository;
  quality: number;
  authoredBy: AzurePipelineDefinitionAuthoredBy;
  drafts: any[];
  queue: AzurePipelineDefinitionQueue;
  id: number;
  name: string;
  url: string;
  uri: string;
  path: string;
  type: number;
  queueStatus: number;
  revision: number;
  createdDate: string;
  project: AzurePipelineDefinitionProject;
}

export interface AzurePipelineDefinitionLinks {
  self: AzurePipelineDefinitionLink;
  web: AzurePipelineDefinitionLink;
  editor: AzurePipelineDefinitionLink;
  badge: AzurePipelineDefinitionLink;
}

export interface AzurePipelineDefinitionLink {
  href: string;
}

export interface AzurePipelineDefinitionAuthoredBy {
  displayName: string;
  url: string;
  _links: AzurePipelineDefinitionAuthoredByLinks;
  id: string;
  uniqueName: string;
  imageUrl: string;
  descriptor: string;
}

export interface AzurePipelineDefinitionAuthoredByLinks {
  avatar: AzurePipelineDefinitionLink;
}

export interface AzurePipelineDefinitionProcess {
  yamlFilename: string;
  type: number;
}

export interface AzurePipelineDefinitionProject {
  id: string;
  name: string;
  description: string;
  url: string;
  state: number;
  revision: number;
  visibility: number;
  lastUpdateTime: string;
}

export interface AzurePipelineDefinitionQueue {
  _links: AzurePipelineDefinitionQueueLinks;
  id: number;
  name: string;
  url: string;
  pool: AzurePipelineDefinitionPool;
}

export interface AzurePipelineDefinitionQueueLinks {
  self: AzurePipelineDefinitionLink;
}

export interface AzurePipelineDefinitionPool {
  id: number;
  name: string;
}

export interface AzurePipelineDefinitionRepository {
  properties: RepositoryProperties;
  id: string;
  type: string;
  name: string;
  url: string;
  defaultBranch: string;
  clean: string;
  checkoutSubmodules: boolean;
}

export interface RepositoryProperties {
  safeRepository: string;
  reportBuildStatus: string;
  fetchDepth: string;
  cleanOptions: string;
  gitLfsSupport: string;
  skipSyncSource: string;
  checkoutNestedSubmodules: string;
}

export interface AzurePipelineDefinitionTrigger {
  branchFilters: any[];
  pathFilters: any[];
  settingsSourceType: number;
  batchChanges: boolean;
  maxConcurrentBuildsPerBranch: number;
  triggerType: number;
}



// Generated by https://quicktype.io

export interface AzurePipelineRunResult {
  _links:             AzurePipelineRunLinks;
  templateParameters: AzurePipelineRunTemplateParameters;
  pipeline:           AzurePipelineRunResultPipeline;
  state:              string;
  createdDate:        string;
  url:                string;
  resources:          AzurePipelineRunResources;
  id:                 number;
  name:               string;
}

export interface AzurePipelineRunLinks {
  self:           AzurePipelineRunWebClass;
  web:            AzurePipelineRunWebClass;
  "pipeline.web": AzurePipelineRunWebClass;
  pipeline:       AzurePipelineRunWebClass;
}

export interface AzurePipelineRunWebClass {
  href: string;
}

export interface AzurePipelineRunResultPipeline {
  url:      string;
  id:       number;
  revision: number;
  name:     string;
  folder:   string;
}

export interface AzurePipelineRunResources {
  repositories: AzurePipelineRunRepositories;
}

export interface AzurePipelineRunRepositories {
  self: AzurePipelineRunSelf;
}

export interface AzurePipelineRunSelf {
  repository: AzurePipelineRunRepository;
  refName:    string;
  version:    string;
}

export interface AzurePipelineRunRepository {
  id:   string;
  type: string;
}

export interface AzurePipelineRunTemplateParameters {
  environment: string;
  action:      string;
}
